{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.c91f767f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef(); \n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const {onAddedComment} = props;\n\n  useEffect(() => {\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: {text: enteredText} , quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from '../comments/CommentsList';\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0)){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0) ){\n    comments = <p className = 'centered'>No Existen Comentatios Aun!!!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>Comentarios de Usuarios</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          AÃ±adir Comentario\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighligtedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = (props) => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const {quoteId} = params;\n\n  const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if(status === 'pending') {\n    return(\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if(error){\n    return <p className='centered'>{error}</p>\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No Quote Found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighligtedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Cargar Comentarios\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}